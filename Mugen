repeat wait() until game:IsLoaded()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local UIS = game:GetService("UserInputService")
local VirtualUser = game:GetService("VirtualUser")
local VIM =game:GetService("VirtualInputManager")
local ReplStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Imput = game:GetService("UserInputService")
local COREGUI = game:GetService("CoreGui")
local LP = game:GetService("Players").LocalPlayer
local HttpService = game:GetService("HttpService")
local RunS = game:GetService("RunService")
local X, Y = 0, 0
local Mouse = LP:GetMouse()
local GetLocalName = LP.Name
local request = (syn and syn.request) or (http and http.request) or http_request
local client = game:GetService("Players").LocalPlayer
local Plr = game:GetService("Players").LocalPlayer
local Data = game:GetService("ReplicatedStorage")["Player_Data"][game.Players.LocalPlayer.Name]
game:GetService("Players").LocalPlayer.DisplayName = "MthuwHub"

local function pressKey(key)
    VIM:SendKeyEvent(true, key, false, game)
    wait()
    VIM:SendKeyEvent(false, key, false, game)
end

local function GetHuman()
    local h = LP.Character
    h = h and (h:FindFirstChild("Humanoid") or h:FindFirstChildWhichIsA("Humanoid"))
    return h or workspace.CurrentCamera.CameraSubject
end

local GramxProjectFloat = tostring(math.random(0, 100000))
local TweenFloatVelocity = Vector3.new(0,0,0)
function CreateTweenFloat()
    local BV = game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(GramxProjectFloat) or Instance.new("BodyVelocity")
    BV.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
    BV.Name = GramxProjectFloat
    BV.MaxForce = Vector3.new(100000, 100000, 100000)
    BV.Velocity = TweenFloatVelocity
end

function RemoveDMG()
   local part  =  game:GetService("StarterPlayer").StarterPlayerScripts.Client_Modules.Modules.Extra.Damage_Text

   local part1 =  game:GetService("ReplicatedStorage").Assets.Extras.Damage_Text

   local part2 = game:GetService("Players").LocalPlayer.PlayerScripts.Client_Modules.Modules.Extra.Damage_Text

   if part then
       part:Destroy()
   end

   if part1 then
       part1:Destroy()
   end

   if part2 then
       part2:Destroy()
   end
end

function RemovePARTICLES()
   local COINS = game:GetService("ReplicatedStorage").Assets.Extras.Coin

   local PARTICLES = game:GetService("ReplicatedStorage").Assets.Particles.Parts

   if COINS then
       COINS:Destroy()
   end

   if PARTICLES then
       PARTICLES:Destroy()
   end
end

spawn(function()
     while task.wait() do
         if AutoCollectChestv2 then
             for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
                 if v.Name == "Loot_Chest" and v:FindFirstChild("Drops") then
                     if #v.Drops:GetChildren() == 0 then
                         v:Destroy()
                     else
                         for _, drop in pairs(v.Drops:GetChildren()) do
                             local args = {
                                 [1] = drop.Name
                             }
 
                             v.Add_To_Inventory:InvokeServer(unpack(args))
                             if #v.Drops:GetChildren() == 0 then
                                 v:Destroy()
                             end
                         end
                     end
                 end
             end
         end
     end
 end)    

 local function sendWebhook(itemName)
   local payload = {
       ["content"] = "",
       ["embeds"] = {{
           ["title"] = "**Item Obtained!**",
           ["description"] = game.Players.LocalPlayer.DisplayName .. " obtained the item: " .. itemName,
           ["type"] = "rich",
           ["color"] = tonumber(0xffffff),
           ["fields"] = {
               {
                   ["name"] = "Hardware ID:",
                   ["value"] = "Unknown", -- Replace with the hardware ID retrieval method suitable for Fluxus
                   ["inline"] = true
               }
           }
       }}
   }

   local headers = {
       ["Content-Type"] = "application/json"
   }

   local requestBody = game:GetService("HttpService"):JSONEncode(payload)

   local response = http_request({
       Url = WebhookURL,
       Method = "POST",
       Headers = headers,
       Body = requestBody
   })
end

spawn(function()
   while true do
       if AutoCollectChestv3 then
           for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
               if v.Name == "Loot_Chest" and v:FindFirstChild("Drops") then
                   if #v.Drops:GetChildren() == 0 then
                       v:Destroy()
                   else
                       for _, drop in pairs(v.Drops:GetChildren()) do
                           local args = {
                               [1] = drop.Name
                           }

                           v.Add_To_Inventory:InvokeServer(unpack(args))
                           if #v.Drops:GetChildren() == 0 then
                               v:Destroy()
                           end

                           sendWebhook(drop.Name)
                       end
                   end
               end
           end
       end
       wait()
   end
end)

-- // AUTO CLASH - FARM
	
spawn(function()
    while task.wait() do
        pcall(function()
            if AutoClash then
                pressKey(Enum.KeyCode[game.Players.LocalPlayer.PlayerGui["universal_client_scripts"].Clashing2["Clash_Ui2"].Holder:WaitForChild('Front').Text])
            end
        end)
    end
end)

local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait

local Window = library:CreateWindow({
Name = "Mthuw Hub PREMIUM // Mugen",
Themeable = {
Info = "Discord Server: discord.gg/YesH5f2ccN"
}
})

local Main = Window:CreateTab({
Name = "Main"
})

local Setting = Main:CreateSection({
Name = "[Setting]",
Side = "Left"
})

local Farming = Main:CreateSection({
    Name = "[Farming]",
    Side = "Left"
    })

local Mugen = Main:CreateSection({
        Name = "[Mugen]",
Side = "Right"
        })

Setting:AddToggle({
Name = "Remove Damage Text",
Default = false,
Callback = function(Value)
  getgenv().RemoveDMG = Value
      RemoveDMG()
    end
})

Setting:AddToggle({
 Name = "Remove Particles",
   Default = false,
   Callback = function(Value)
    getgenv().RemovePARTICLES = Value
      RemovePARTICLES()
   end
})

Setting:AddToggle({
   Name = "White Screen [FPS Boost]",
Default = false,
   Callback = function(state)
      if state then
         game:GetService("RunService"):Set3dRenderingEnabled(false)
      else
         game:GetService("RunService"):Set3dRenderingEnabled(true)
      end
   end
})

Setting:AddToggle({
  Name = "War Drums Mode [All Races]",
   Default = false, 
   Callback = function(Value)
      getgenv().infWD = Value
		while getgenv().infWD do 
		local args = {
    	[1] = true
		}

		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("war_Drums_remote"):FireServer(unpack(args))
		wait(3)
      end
   end
})

Setting:AddButton({
        Name = "FPS Boost",
        Callback = function()
                _G.Settings = {
            Players = {
                ["Ignore Me"] = true, 
                ["Ignore Others"] = true 
            },
            Meshes = {
                Destroy = false, 
                LowDetail = true 
            },
            Images = {
                Invisible = true, 
                LowDetail = false, 
                Destroy = false, 
            },
            Other = {
                ["No Particles"] = true, 
                ["No Camera Effects"] = true, 
                ["No Explosions"] = true, 
                ["No Clothes"] = true,
                ["Low Water Graphics"] = true, 
                ["No Shadows"] = true, 
                ["Low Rendering"] = true, 
                ["Low Quality Parts"] = true 
            }
        }
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Hiifromvn/MthuwHub/main/FPSBoost"))()
    end
    })

local firing = false
Farming:AddToggle({
    Name = "Bypass GKA ARROW",
    Default = false,
    Callback = function(state)
        firing = state

        if firing then -- Start the loop only if firing is true
            while firing do -- Loop while firing is true
                local Handle_Initiate_S_ = game.ReplicatedStorage.Remotes.To_Server.Handle_Initiate_S_
                Handle_Initiate_S_:InvokeServer("skil_ting_asd", game.Players.LocalPlayer, "arrow_knock_back", 5)
                wait(14)
            end
        end
    end
})


local running = false

Farming:AddToggle({
Name = "GKA Arrow (Hell Mode)",
Default = false,
Callback = function(state) 
        running = state

        if running then
            while running do 
                local success, error = pcall(function()
                    local hitCounter = {} 

                    for i, v in next, workspace.Mobs:GetDescendants() do
                        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                            local modelId = v:GetFullName()

                            -- Check if the model has a counter and initialize it if not present
                            if not hitCounter[modelId] then
                                hitCounter[modelId] = 0
                            end

                            if hitCounter[modelId] < 2 then
                                local humanoid = v:FindFirstChildOfClass("Humanoid")
                                if humanoid and humanoid.Health > 0 then
                                    local Handle_Initiate_S_ = game.ReplicatedStorage.Remotes.To_Server.Handle_Initiate_S_
                                    Handle_Initiate_S_:InvokeServer("arrow_knock_back_damage", game.Players.LocalPlayer.Character, v.HumanoidRootPart.CFrame, v, 500, 500)
                                    hitCounter[modelId] = hitCounter[modelId] + 1
                                else
                                    
                                    print("Model with health 0:", modelId)
                                end
                            end
                            local hitCount = 0
                            for _, count in pairs(hitCounter) do
                                hitCount = hitCount + count
                            end
                            if hitCount >= 2 then
                                break -- Exit the loop if we hit two mobs/models
                            end
                        end
                    end
                end)

                if not success then
                    print("An error occurred:", error)
                end

                wait(1) 
            end
        end
    end
})

Farming:AddToggle({
Name = "Auto Loot",
Default = false,
Callback = function(Value)
     getgenv().AutoCollectChestv2 = Value
    end
})

Farming:AddToggle({
Name = "Auto Loot [Webhook]",
Default = false,
Callback = function(Value)
     getgenv().AutoCollectChestv3 = Value
    end
})

Farming:AddTextBox({
Name = "Webhook URL",
Default = string,
    Placeholder = "Enter Webhook URL",
    Callback = function(Value)
        WebhookURL = Value
    end
})

Mugen:AddToggle({
    Name = "Auto Clash [Not Instant]",
    Default = false,
   Callback = function(state)
       getgenv().AutoClash = state
   end
})

Mugen:AddButton({
    Name = "Instant Clash [Not Global]",
    Callback = function()
        local playerName = game:GetService("Players").LocalPlayer.Name
    
        local args = {
            [1] = "Change_Value",
            [2] = workspace.Debree.clash_folder[playerName.."vsEnmu"][playerName],
            [3] = 200,  -- Change the value of index 3 to 200
        }
    
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
    end
})
Mugen:AddButton({
    Name = "Global Instant Clash",
 Callback = function()
    local players = game:GetService("Players"):GetPlayers()

    for _, player in ipairs(players) do
        local playerName = player.Name

        local clashFolder = workspace.Debree.clash_folder
        local playerFolder = clashFolder:FindFirstChild(playerName.."vsEnmu")

        if playerFolder then
            local targetPlayer = playerFolder:FindFirstChild(playerName)
            if targetPlayer then
                local args = {
                    [1] = "Change_Value",
                    [2] = targetPlayer,
                    [3] = 200,  -- Change the value of index 3 to 200
                }

                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
            end
        end
      end
    end
    })
